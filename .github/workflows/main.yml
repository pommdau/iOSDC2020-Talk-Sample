# ワークフローの名前
name: CI  

# CIが実行されるトリガーを指定
# 頻度はお値段と相談
on:
  push:
    branches:
      - main
      - develop
    paths-ignore:  # READMEのpush時は無視する
      - Docs/**  # Docs以下に画像等を配置している想定
      - README.md
  pull_request:
    branches:
      - develop
    paths-ignore:
      - Docs/**
      - README.md

# 環境変数を指定
# トップレベルに書くことで全ジョブ共通に設定
env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: macOS-latest
    
    # ジョブ内のみで使える環境変数の定義
    env:
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin
    
    steps:
      - uses: actions/checkout@v2
      
      # name: stepに名前をつける
      - name: Cache Gems  # キャッシュの作成と復元
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      
      # キャッシュがない場合はライブラリのインストールが必要
      - name: Install Bundled Gems
        run: make install-bundler
      
      # Mintのインストール
      - name: Install Mint
        run: brew install mint
        
      - name: Cache Mint packages
        uses: actions/cache@v2
        with:
          path: mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-
      
      # TODO: READMEを見ながらキャッシュの作成と復元を行う
      - name: Install Carthage frameworks
        run: make install-carthage
        
      - name: Generate Xcode project and install Pods
        run: make generate-xcodeproj
        
      - name: Xcode build
        run: make build-debug
        
      - name: Xcode test
        run: make test
      
